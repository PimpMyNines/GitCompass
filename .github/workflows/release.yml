name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to tag (e.g. 1.0.0)'
        required: true
        type: string

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make develop
      
      - name: Update version in pyproject.toml
        run: |
          sed -i "s/version = \"[0-9]\+\.[0-9]\+\.[0-9]\+.*/version = \"${{ github.event.inputs.version }}\"/" pyproject.toml
      
      - name: Verify version was updated
        run: |
          grep "version = \"${{ github.event.inputs.version }}\"" pyproject.toml
      
      - name: Commit version change
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pyproject.toml
          git commit -m "Bump version to ${{ github.event.inputs.version }}"
      
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      
      - name: Create tag
        run: |
          git tag -a v${{ github.event.inputs.version }} -m "Version ${{ github.event.inputs.version }}"
          git push --tags
      
      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: .github/changelog-configuration.json
          commitMode: true
          ignorePreReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}